<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>test unitaire on Brice Dutheil</title>
        <link>https://blog.arkey.fr/tags/test-unitaire/</link>
        <description>Recent content in test unitaire on Brice Dutheil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-US</language>
        <managingEditor>brice.dutheil@gmail.com (Brice Dutheil)</managingEditor>
        <webMaster>brice.dutheil@gmail.com (Brice Dutheil)</webMaster>
        <lastBuildDate>Fri, 21 Oct 2011 20:06:46 +0000</lastBuildDate>
        
        <atom:link href="https://blog.arkey.fr/tags/test-unitaire/index.xml" rel="self" type="application/rss+xml" />
        
        
        
        <item>
            <title>Quelques Live Template IntelliJ pour Mockito</title>
            <link>https://blog.arkey.fr/2011/10/21/quelques-live-template-intellij-pour-mockito/</link>
            <pubDate>Fri, 21 Oct 2011 20:06:46 +0000</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2011/10/21/quelques-live-template-intellij-pour-mockito/</guid>
            <description>Hello, j&amp;rsquo;en avais un peu marre d&amp;rsquo;écrire régulièrement voire répétitivement dans mes tests les constructions mockito.
Pour ça je me suis créé dans mon IDE favori, IntelliJ, ce qu&amp;rsquo;on appelle des Live Template.</description>
        </item>
        
        
        
        <item>
            <title>Tester votre code JMX dans des conditions pseudo réelle.</title>
            <link>https://blog.arkey.fr/2011/10/14/tester-votre-code-jmx-dans-des-conditions-pseudo-reelle/</link>
            <pubDate>Fri, 14 Oct 2011 13:01:31 +0000</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2011/10/14/tester-votre-code-jmx-dans-des-conditions-pseudo-reelle/</guid>
            <description>Vous devez écrire du code qui fait appel à JMX, en bon citoyen et bon développeur vous voulez tester ce code.
Première approche; vous enregistrez vos MBean sur un MBeanServer, disons celui de la plateforme (avec Java 6 : ManagementFactory.</description>
        </item>
        
        
    </channel>
</rss>