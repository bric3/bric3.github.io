<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>JVM on Brice Dutheil</title>
        <link>https://blog.arkey.fr/tags/jvm/</link>
        <description>Recent content in JVM on Brice Dutheil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-US</language>
        <managingEditor>brice.dutheil@gmail.com (Brice Dutheil)</managingEditor>
        <webMaster>brice.dutheil@gmail.com (Brice Dutheil)</webMaster>
        <lastBuildDate>Mon, 16 May 2022 00:32:09 +0200</lastBuildDate>
        
        <atom:link href="https://blog.arkey.fr/tags/jvm/index.xml" rel="self" type="application/rss+xml" />
        
        
        
        <item>
            <title>Using Linux&#39;s memfd_secret syscall from the JVM with JEP-419</title>
            <link>https://blog.arkey.fr/2022/05/16/linux_memfd_secret_with_jep-419/</link>
            <pubDate>Mon, 16 May 2022 00:32:09 +0200</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2022/05/16/linux_memfd_secret_with_jep-419/</guid>
            <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Linux 5.14 brought a new system call &lt;code&gt;memfd_secret&lt;/code&gt; in order to mitigate speculative attack by preventing the kernel from being able to peek at these memory segments. Let’s use this syscall from the JVM with the JEP-419 API.&lt;/p&gt;
&lt;/div&gt;
</description>
        </item>
        
        
        
        <item>
            <title>A practical look at JEP-412 in JDK17 with libsodium</title>
            <link>https://blog.arkey.fr/2021/09/04/a-practical-look-at-jep-412-in-jdk17-with-libsodium/</link>
            <pubDate>Sat, 04 Sep 2021 16:38:06 +0100</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2021/09/04/a-practical-look-at-jep-412-in-jdk17-with-libsodium/</guid>
            <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK 17 is coming and with the incubating JEP-412, let’s have a practical look at this API that should supersede JNI.&lt;/p&gt;
&lt;/div&gt;
</description>
        </item>
        
        
        
        <item>
            <title>A practical look at JEP-389 in JDK16 with libsodium</title>
            <link>https://blog.arkey.fr/2021/02/20/a-practical-look-at-jep-389-in-jdk16-with-libsodium/</link>
            <pubDate>Sat, 20 Feb 2021 16:01:06 +0100</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2021/02/20/a-practical-look-at-jep-389-in-jdk16-with-libsodium/</guid>
            <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;JDK 16 is coming and with the incubating JEP-389, let’s have a practical look at this API that should supersede JNI.&lt;/p&gt;
&lt;/div&gt;
</description>
        </item>
        
        
        
        <item>
            <title>Embracing JVM unified logging (JEP-158 / JEP-271)</title>
            <link>https://blog.arkey.fr/2020/07/28/embracing-jvm-unified-logging-jep-158-jep-271/</link>
            <pubDate>Tue, 28 Jul 2020 01:54:58 +0200</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2020/07/28/embracing-jvm-unified-logging-jep-158-jep-271/</guid>
            <description>Unified logging was introduced in JDK 9, and is available for us all, in the JDK 11 LTS. Like other great serviceability feature (jcmd or JFR) this was inspired by JRockit.</description>
        </item>
        
        
        
        <item>
            <title>Lenteur d&#39;une appli Web sur une JVM IBM</title>
            <link>https://blog.arkey.fr/2010/08/09/lenteur-dune-appli-web-sur-une-jvm-ibm/</link>
            <pubDate>Mon, 09 Aug 2010 16:16:43 +0000</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2010/08/09/lenteur-dune-appli-web-sur-une-jvm-ibm/</guid>
            <description>Sujet intéressant, les problèmes en production sont quand même pour beaucoup des casse-têtes. Effectivement c&amp;rsquo;est bien vrai, les problèmes en production sont difficiles à résoudre. Il y a bien une partie technique souvent absconse, mais ce n&amp;rsquo;est pas un travail en solitaire, c&amp;rsquo;est un travail d&amp;rsquo;équipe.</description>
        </item>
        
        
    </channel>
</rss>