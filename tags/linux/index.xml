<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Linux on Brice Dutheil</title>
        <link>https://blog.arkey.fr/tags/linux/</link>
        <description>Recent content in Linux on Brice Dutheil</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-US</language>
        <managingEditor>brice.dutheil@gmail.com (Brice Dutheil)</managingEditor>
        <webMaster>brice.dutheil@gmail.com (Brice Dutheil)</webMaster>
        <lastBuildDate>Mon, 16 May 2022 00:32:09 +0200</lastBuildDate>
        
        <atom:link href="https://blog.arkey.fr/tags/linux/index.xml" rel="self" type="application/rss+xml" />
        
        
        
        <item>
            <title>Using Linux&#39;s memfd_secret syscall from the JVM with JEP-419</title>
            <link>https://blog.arkey.fr/2022/05/16/linux_memfd_secret_with_jep-419/</link>
            <pubDate>Mon, 16 May 2022 00:32:09 +0200</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2022/05/16/linux_memfd_secret_with_jep-419/</guid>
            <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Linux 5.14 brought a new system call &lt;code&gt;memfd_secret&lt;/code&gt; in order to mitigate speculative attack by preventing the kernel from being able to peek at these memory segments. Letâ€™s use this syscall from the JVM with the JEP-419 API.&lt;/p&gt;
&lt;/div&gt;
</description>
        </item>
        
        
        
        <item>
            <title>When Java&#39;s WatchService is not the right tool in a container</title>
            <link>https://blog.arkey.fr/2019/09/13/watchservice-and-bind-mount/</link>
            <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2019/09/13/watchservice-and-bind-mount/</guid>
            <description>Boring code that should be written once and run everywhere Suppose the application you&amp;rsquo;re working on needs to monitor changes to a file and rely on Java&amp;rsquo;s WatchService introduced in Java 7.</description>
        </item>
        
        
        
        <item>
            <title>Install 1Password &amp; browser agent with wine on Linux</title>
            <link>https://blog.arkey.fr/2015/11/16/1password-wine/</link>
            <pubDate>Mon, 16 Nov 2015 00:00:00 +0000</pubDate>
            <author>brice.dutheil@gmail.com (Brice Dutheil)</author>
            <guid>https://blog.arkey.fr/2015/11/16/1password-wine/</guid>
            <description>Before starting, this install method is based on 1Password 4, it may work with future versions, but it is not guaranteed. Last tested version is 4.1.0.530.
Install WINE sudo apt-get install wine  Download 1Password Running 1Password on Ubuntu requires the Windows version.</description>
        </item>
        
        
    </channel>
</rss>